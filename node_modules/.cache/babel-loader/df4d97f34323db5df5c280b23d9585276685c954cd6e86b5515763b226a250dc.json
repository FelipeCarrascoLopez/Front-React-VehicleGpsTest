{"ast":null,"code":"var _jsxFileName = \"/home/fcarrasco/Vehicle-Map-Front---React/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\"\n};\nconst center = {\n  lat: 0,\n  // Coordenadas iniciales\n  lng: 0\n};\nfunction Map() {\n  _s();\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const [vehicles, setVehicles] = useState([]);\n  useEffect(() => {\n    async function fetchVehicles() {\n      try {\n        const response = await fetch(\"https://api-rails.site/api/v1/vehicles\");\n        const data = await response.json();\n        console.log(\"Vehicles fetched:\", data); // Verifica los datos aquí\n        setVehicles(data);\n      } catch (error) {\n        console.error(\"Error fetching vehicles:\", error);\n      }\n    }\n    fetchVehicles();\n  }, []);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Cargando mapa...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 2,\n    children: vehicles.map(vehicle => {\n      const lat = parseFloat(vehicle.latitude);\n      const lng = parseFloat(vehicle.longitude);\n      if (isNaN(lat) || isNaN(lng)) {\n        console.error(`Invalid coordinates for vehicle ${vehicle.identifier}`);\n        return null;\n      }\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat,\n          lng\n        },\n        label: vehicle.identifier\n      }, vehicle.identifier, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"S2wyzbFcEO/1mLxzSZA6YkQYjFg=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","Marker","useLoadScript","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Map","_s","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","vehicles","setVehicles","fetchVehicles","response","fetch","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","map","vehicle","parseFloat","latitude","longitude","isNaN","identifier","position","label","_c","$RefreshReg$"],"sources":["/home/fcarrasco/Vehicle-Map-Front---React/src/components/Map.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\",\n};\n\nconst center = {\n  lat: 0, // Coordenadas iniciales\n  lng: 0,\n};\n\nfunction Map() {\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  });\n\n\n  const [vehicles, setVehicles] = useState([]);\n\n  useEffect(() => {\n    async function fetchVehicles() {\n      try {\n        const response = await fetch(\"https://api-rails.site/api/v1/vehicles\");\n        const data = await response.json();\n        console.log(\"Vehicles fetched:\", data); // Verifica los datos aquí\n        setVehicles(data);\n      } catch (error) {\n        console.error(\"Error fetching vehicles:\", error);\n      }\n    }\n    fetchVehicles();\n  }, []);\n\n  if (!isLoaded) return <div>Cargando mapa...</div>;\n\n  return (\n    <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={2}>\n      {vehicles.map((vehicle) => {\n        const lat = parseFloat(vehicle.latitude);\n        const lng = parseFloat(vehicle.longitude);\n\n        if (isNaN(lat) || isNaN(lng)) {\n          console.error(`Invalid coordinates for vehicle ${vehicle.identifier}`);\n          return null;\n        }\n\n        return (\n          <Marker\n            key={vehicle.identifier}\n            position={{ lat, lng }}\n            label={vehicle.identifier}\n          />\n        );\n      })}\n    </GoogleMap>\n  );\n}\n\nexport default Map;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,MAAM,EAAEC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC;EAAE;EACRC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAAEC;EAAS,CAAC,GAAGX,aAAa,CAAC;IACjCY,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC;EAChC,CAAC,CAAC;EAGF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,eAAesB,aAAaA,CAAA,EAAG;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAAC,CAAC,CAAC;QACxCJ,WAAW,CAACI,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;IACAP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACP,QAAQ,EAAE,oBAAOT,OAAA;IAAAwB,QAAA,EAAK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEjD,oBACE5B,OAAA,CAACJ,SAAS;IAACiC,iBAAiB,EAAE5B,cAAe;IAACG,MAAM,EAAEA,MAAO;IAAC0B,IAAI,EAAE,CAAE;IAAAN,QAAA,EACnEV,QAAQ,CAACiB,GAAG,CAAEC,OAAO,IAAK;MACzB,MAAM3B,GAAG,GAAG4B,UAAU,CAACD,OAAO,CAACE,QAAQ,CAAC;MACxC,MAAM5B,GAAG,GAAG2B,UAAU,CAACD,OAAO,CAACG,SAAS,CAAC;MAEzC,IAAIC,KAAK,CAAC/B,GAAG,CAAC,IAAI+B,KAAK,CAAC9B,GAAG,CAAC,EAAE;QAC5Be,OAAO,CAACE,KAAK,CAAC,mCAAmCS,OAAO,CAACK,UAAU,EAAE,CAAC;QACtE,OAAO,IAAI;MACb;MAEA,oBACErC,OAAA,CAACH,MAAM;QAELyC,QAAQ,EAAE;UAAEjC,GAAG;UAAEC;QAAI,CAAE;QACvBiC,KAAK,EAAEP,OAAO,CAACK;MAAW,GAFrBL,OAAO,CAACK,UAAU;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGxB,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAACpB,EAAA,CA7CQD,GAAG;EAAA,QACWT,aAAa;AAAA;AAAA0C,EAAA,GAD3BjC,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}